
Data Types
----------


    
lcls2_cc_lib.FB_L2SI_Flowmeter
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):FLOW_RBV
      - ai
      - $(SYMBOL).fFlowRate
      - | io: input


    * - $(PREFIX):MA_RBV
      - longin
      - $(SYMBOL).fRaw
      - | io: input


 
lcls2_cc_lib.FB_PPM
^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):CAM:CIL:PCT
      - ao
      - $(SYMBOL).fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - $(PREFIX):CAM:CIL:PCT_RBV
      - ai
      - $(SYMBOL).fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - $(PREFIX):CAM:PWR
      - bo
      - $(SYMBOL).fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):CAM:PWR_RBV
      - bi
      - $(SYMBOL).fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:10:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:10:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:10:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:10:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:10:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:10:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:10:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:10:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:11:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:11:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:11:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:11:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:11:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:11:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:11:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:11:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:12:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:12:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:12:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:12:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:12:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:12:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:12:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:12:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:13:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:13:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:13:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:13:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:13:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:13:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:13:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:13:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:14:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:14:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:14:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:14:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:14:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:14:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:14:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:14:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:15:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:15:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:15:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:15:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:15:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:15:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:15:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:15:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbStates.fbStateManager.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbStates.fbStateManager.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbStates.fbStateManager.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbStates.fbStateManager.nErrorId
      - | io: input


    * - $(PREFIX):MMS:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbStates.fbStateManager.sErrorMessage
      - | io: input


    * - $(PREFIX):MMS:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbStates.enumGet
      - | io: input


    * - $(PREFIX):MMS:STATE:RESET
      - bo
      - $(SYMBOL).fbStates.fbStateManager.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbStates.fbStateManager.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:SET
      - mbbo
      - $(SYMBOL).fbStates.enumSet
      - | io: output


    * - $(PREFIX):MMS:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbStates.enumSet
      - | io: output


    * - $(PREFIX):SFM:FLOW_RBV
      - ai
      - $(SYMBOL).fbFlowMeter.fFlowRate
      - | io: input


    * - $(PREFIX):SFM:MA_RBV
      - longin
      - $(SYMBOL).fbFlowMeter.fRaw
      - | io: input


    * - $(PREFIX):SPM:CALIB:MJ_RATIO
      - ao
      - $(SYMBOL).fbPowerMeter.fCalibMJRatio
      - | io: output


    * - $(PREFIX):SPM:CALIB:MJ_RATIO_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fCalibMJRatio
      - | io: output


    * - $(PREFIX):SPM:CALIB:OFFSET
      - ao
      - $(SYMBOL).fbPowerMeter.fCalibRelOffset
      - | io: output


    * - $(PREFIX):SPM:CALIB:OFFSET_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fCalibRelOffset
      - | io: output


    * - $(PREFIX):SPM:CALIB:RATIO
      - ao
      - $(SYMBOL).fbPowerMeter.fCalibRelRatio
      - | io: output


    * - $(PREFIX):SPM:CALIB:RATIO_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fCalibRelRatio
      - | io: output


    * - $(PREFIX):SPM:CALIB_BUFFER_RBV
      - waveform
      - $(SYMBOL).fbPowerMeter.fCalibBaseBuffer
      - | io: input


    * - $(PREFIX):SPM:CALIB_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fCalibBase
      - | io: input


    * - $(PREFIX):SPM:MJ_BUFFER_RBV
      - waveform
      - $(SYMBOL).fbPowerMeter.fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - $(PREFIX):SPM:MJ_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fCalibMJ
      - | field: EGU mJ
        | io: input


    * - $(PREFIX):SPM:STC:CONN_RBV
      - bi
      - $(SYMBOL).fbPowerMeter.fbThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SPM:STC:ERR_RBV
      - bi
      - $(SYMBOL).fbPowerMeter.fbThermoCouple.bError
      - | io: input


    * - $(PREFIX):SPM:STC:TEMP_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fbThermoCouple.fTemp
      - | io: input


    * - $(PREFIX):SPM:VOLT_BUFFER_RBV
      - waveform
      - $(SYMBOL).fbPowerMeter.fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - $(PREFIX):SPM:VOLT_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fVoltage
      - | field: EGU mV
        | io: input


    * - $(PREFIX):YAG:STC:CONN_RBV
      - bi
      - $(SYMBOL).fbYagThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):YAG:STC:ERR_RBV
      - bi
      - $(SYMBOL).fbYagThermoCouple.bError
      - | io: input


    * - $(PREFIX):YAG:STC:TEMP_RBV
      - ai
      - $(SYMBOL).fbYagThermoCouple.fTemp
      - | io: input


 
lcls2_cc_lib.FB_PPM_Gige
^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):CIL:PCT
      - ao
      - $(SYMBOL).fIlluminatorPercent
      - | EGU: %
        | io: output


    * - $(PREFIX):CIL:PCT_RBV
      - ai
      - $(SYMBOL).fIlluminatorPercent
      - | EGU: %
        | io: output


    * - $(PREFIX):PWR
      - bo
      - $(SYMBOL).bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):PWR_RBV
      - bi
      - $(SYMBOL).bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


 
lcls2_cc_lib.FB_PPM_PowerMeter
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):CALIB:MJ_RATIO
      - ao
      - $(SYMBOL).fCalibMJRatio
      - | io: output


    * - $(PREFIX):CALIB:MJ_RATIO_RBV
      - ai
      - $(SYMBOL).fCalibMJRatio
      - | io: output


    * - $(PREFIX):CALIB:OFFSET
      - ao
      - $(SYMBOL).fCalibRelOffset
      - | io: output


    * - $(PREFIX):CALIB:OFFSET_RBV
      - ai
      - $(SYMBOL).fCalibRelOffset
      - | io: output


    * - $(PREFIX):CALIB:RATIO
      - ao
      - $(SYMBOL).fCalibRelRatio
      - | io: output


    * - $(PREFIX):CALIB:RATIO_RBV
      - ai
      - $(SYMBOL).fCalibRelRatio
      - | io: output


    * - $(PREFIX):CALIB_BUFFER_RBV
      - waveform
      - $(SYMBOL).fCalibBaseBuffer
      - | io: input


    * - $(PREFIX):CALIB_RBV
      - ai
      - $(SYMBOL).fCalibBase
      - | io: input


    * - $(PREFIX):MJ_BUFFER_RBV
      - waveform
      - $(SYMBOL).fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - $(PREFIX):MJ_RBV
      - ai
      - $(SYMBOL).fCalibMJ
      - | field: EGU mJ
        | io: input


    * - $(PREFIX):STC:CONN_RBV
      - bi
      - $(SYMBOL).fbThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):STC:ERR_RBV
      - bi
      - $(SYMBOL).fbThermoCouple.bError
      - | io: input


    * - $(PREFIX):STC:TEMP_RBV
      - ai
      - $(SYMBOL).fbThermoCouple.fTemp
      - | io: input


    * - $(PREFIX):VOLT_BUFFER_RBV
      - waveform
      - $(SYMBOL).fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - $(PREFIX):VOLT_RBV
      - ai
      - $(SYMBOL).fVoltage
      - | field: EGU mV
        | io: input


 
lcls2_cc_lib.FB_PPM_States
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):10:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):10:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):10:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):10:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):10:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):10:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):10:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):10:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):11:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):11:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):11:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):11:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):11:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):11:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):11:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):11:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):12:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):12:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):12:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):12:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):12:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):12:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):12:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):12:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):13:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):13:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):13:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):13:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):13:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):13:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):13:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):13:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):14:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):14:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):14:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):14:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):14:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):14:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):14:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):14:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):15:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):15:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):15:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):15:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):15:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):15:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):15:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):15:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).fbStateManager.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).fbStateManager.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).fbStateManager.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRID_RBV
      - longin
      - $(SYMBOL).fbStateManager.nErrorId
      - | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbStateManager.sErrorMessage
      - | io: input


    * - $(PREFIX):GET_RBV
      - mbbi
      - $(SYMBOL).enumGet
      - | io: input


    * - $(PREFIX):RESET
      - bo
      - $(SYMBOL).fbStateManager.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):RESET_RBV
      - bi
      - $(SYMBOL).fbStateManager.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SET
      - mbbo
      - $(SYMBOL).enumSet
      - | io: output


    * - $(PREFIX):SET_RBV
      - mbbi
      - $(SYMBOL).enumSet
      - | io: output


 
lcls2_cc_lib.lcls_twincat_motion.PMPS.ST_BeamParams
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Attenuation_RBV
      - ai
      - $(SYMBOL).fAtt
      - | field: EGU %
        | io: input


    * - $(PREFIX):AuxAtt:001:Att_RBV
      - longin
      - $(SYMBOL).astAttenuators[1].nAtt
      - | field: EGU %
        | io: input


    * - $(PREFIX):AuxAtt:001:OK_RBV
      - bi
      - $(SYMBOL).astAttenuators[1].xAttOK
      - | io: input


    * - $(PREFIX):AuxAtt:002:Att_RBV
      - longin
      - $(SYMBOL).astAttenuators[2].nAtt
      - | field: EGU %
        | io: input


    * - $(PREFIX):AuxAtt:002:OK_RBV
      - bi
      - $(SYMBOL).astAttenuators[2].xAttOK
      - | io: input


    * - $(PREFIX):AuxAtt:003:Att_RBV
      - longin
      - $(SYMBOL).astAttenuators[3].nAtt
      - | field: EGU %
        | io: input


    * - $(PREFIX):AuxAtt:003:OK_RBV
      - bi
      - $(SYMBOL).astAttenuators[3].xAttOK
      - | io: input


    * - $(PREFIX):AuxAtt:004:Att_RBV
      - longin
      - $(SYMBOL).astAttenuators[4].nAtt
      - | field: EGU %
        | io: input


    * - $(PREFIX):AuxAtt:004:OK_RBV
      - bi
      - $(SYMBOL).astAttenuators[4].xAttOK
      - | io: input


    * - $(PREFIX):AuxAtt:005:Att_RBV
      - longin
      - $(SYMBOL).astAttenuators[5].nAtt
      - | field: EGU %
        | io: input


    * - $(PREFIX):AuxAtt:005:OK_RBV
      - bi
      - $(SYMBOL).astAttenuators[5].xAttOK
      - | io: input


    * - $(PREFIX):AuxAtt:006:Att_RBV
      - longin
      - $(SYMBOL).astAttenuators[6].nAtt
      - | field: EGU %
        | io: input


    * - $(PREFIX):AuxAtt:006:OK_RBV
      - bi
      - $(SYMBOL).astAttenuators[6].xAttOK
      - | io: input


    * - $(PREFIX):AuxAtt:007:Att_RBV
      - longin
      - $(SYMBOL).astAttenuators[7].nAtt
      - | field: EGU %
        | io: input


    * - $(PREFIX):AuxAtt:007:OK_RBV
      - bi
      - $(SYMBOL).astAttenuators[7].xAttOK
      - | io: input


    * - $(PREFIX):AuxAtt:008:Att_RBV
      - longin
      - $(SYMBOL).astAttenuators[8].nAtt
      - | field: EGU %
        | io: input


    * - $(PREFIX):AuxAtt:008:OK_RBV
      - bi
      - $(SYMBOL).astAttenuators[8].xAttOK
      - | io: input


    * - $(PREFIX):AuxAtt:009:Att_RBV
      - longin
      - $(SYMBOL).astAttenuators[9].nAtt
      - | field: EGU %
        | io: input


    * - $(PREFIX):AuxAtt:009:OK_RBV
      - bi
      - $(SYMBOL).astAttenuators[9].xAttOK
      - | io: input


    * - $(PREFIX):AuxAtt:010:Att_RBV
      - longin
      - $(SYMBOL).astAttenuators[10].nAtt
      - | field: EGU %
        | io: input


    * - $(PREFIX):AuxAtt:010:OK_RBV
      - bi
      - $(SYMBOL).astAttenuators[10].xAttOK
      - | io: input


    * - $(PREFIX):AuxAtt:011:Att_RBV
      - longin
      - $(SYMBOL).astAttenuators[11].nAtt
      - | field: EGU %
        | io: input


    * - $(PREFIX):AuxAtt:011:OK_RBV
      - bi
      - $(SYMBOL).astAttenuators[11].xAttOK
      - | io: input


    * - $(PREFIX):AuxAtt:012:Att_RBV
      - longin
      - $(SYMBOL).astAttenuators[12].nAtt
      - | field: EGU %
        | io: input


    * - $(PREFIX):AuxAtt:012:OK_RBV
      - bi
      - $(SYMBOL).astAttenuators[12].xAttOK
      - | io: input


    * - $(PREFIX):AuxAtt:013:Att_RBV
      - longin
      - $(SYMBOL).astAttenuators[13].nAtt
      - | field: EGU %
        | io: input


    * - $(PREFIX):AuxAtt:013:OK_RBV
      - bi
      - $(SYMBOL).astAttenuators[13].xAttOK
      - | io: input


    * - $(PREFIX):AuxAtt:014:Att_RBV
      - longin
      - $(SYMBOL).astAttenuators[14].nAtt
      - | field: EGU %
        | io: input


    * - $(PREFIX):AuxAtt:014:OK_RBV
      - bi
      - $(SYMBOL).astAttenuators[14].xAttOK
      - | io: input


    * - $(PREFIX):AuxAtt:015:Att_RBV
      - longin
      - $(SYMBOL).astAttenuators[15].nAtt
      - | field: EGU %
        | io: input


    * - $(PREFIX):AuxAtt:015:OK_RBV
      - bi
      - $(SYMBOL).astAttenuators[15].xAttOK
      - | io: input


    * - $(PREFIX):AuxAtt:016:Att_RBV
      - longin
      - $(SYMBOL).astAttenuators[16].nAtt
      - | field: EGU %
        | io: input


    * - $(PREFIX):AuxAtt:016:OK_RBV
      - bi
      - $(SYMBOL).astAttenuators[16].xAttOK
      - | io: input


    * - $(PREFIX):Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PulseEnergy_RBV
      - ai
      - $(SYMBOL).fPP_mJ
      - | field: EGU mJ
        | io: input


    * - $(PREFIX):Rate_RBV
      - longin
      - $(SYMBOL).nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):ST_RBV
      - waveform
      - $(SYMBOL).aStoppers
      - | io: input


    * - $(PREFIX):Valid_RBV
      - bi
      - $(SYMBOL).xValid
      - | io: input


 
lcls2_cc_lib.lcls_twincat_motion.PMPS.ST_PMPS_Aperture
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Height_RBV
      - ai
      - $(SYMBOL).Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):OK_RBV
      - bi
      - $(SYMBOL).xOK
      - | io: input


    * - $(PREFIX):Width_RBV
      - ai
      - $(SYMBOL).Width
      - | field: EGU mm
        | io: input


 
lcls2_cc_lib.lcls_twincat_motion.PMPS.ST_PMPS_Attenuator
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Att_RBV
      - longin
      - $(SYMBOL).nAtt
      - | field: EGU %
        | io: input


    * - $(PREFIX):OK_RBV
      - bi
      - $(SYMBOL).xAttOK
      - | io: input


                                                                     
LCLS_General.FB_ThermoCouple
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):STC:CONN_RBV
      - bi
      - $(SYMBOL).bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):STC:ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | io: input


    * - $(PREFIX):STC:TEMP_RBV
      - ai
      - $(SYMBOL).fTemp
      - | io: input


                    
lcls_twincat_motion.DUT_MotionStage
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - $(PREFIX):PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - $(PREFIX):PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - $(PREFIX):PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - $(PREFIX):PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - $(PREFIX):PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - $(PREFIX):PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - $(PREFIX):PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - $(PREFIX):PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - $(PREFIX):PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - $(PREFIX):PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - $(PREFIX):PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - $(PREFIX):PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - $(PREFIX):PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - $(PREFIX):PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - $(PREFIX):PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - $(PREFIX):PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - $(PREFIX):PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - $(PREFIX):PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - $(PREFIX):PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - $(PREFIX):PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - $(PREFIX):PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


 
lcls_twincat_motion.DUT_PositionState
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ACCL
      - ao
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):DCCL
      - ao
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):DELTA
      - ao
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):VALID_RBV
      - bi
      - TRUE if this is a real state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


              
lcls_twincat_motion.FB_PositionStateManager
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):10:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):10:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):10:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):10:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):10:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):10:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):10:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):10:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):11:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):11:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):11:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):11:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):11:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):11:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):11:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):11:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):12:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):12:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):12:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):12:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):12:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):12:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):12:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):12:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):13:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):13:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):13:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):13:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):13:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):13:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):13:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):13:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):14:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):14:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):14:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):14:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):14:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):14:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):14:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):14:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):15:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):15:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):15:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):15:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):15:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):15:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):15:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):15:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRID_RBV
      - longin
      - $(SYMBOL).nErrorId
      - | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).sErrorMessage
      - | io: input


    * - $(PREFIX):RESET
      - bo
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):RESET_RBV
      - bi
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


 
lcls_twincat_motion.FB_PositionStateMove
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ACCL
      - ao
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):AT_STATE_RBV
      - bi
      - $(SYMBOL).bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DCCL
      - ao
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):DELTA
      - ao
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRID_RBV
      - longin
      - $(SYMBOL).nErrorID
      - | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).sErrorMessage
      - | io: input


    * - $(PREFIX):GO
      - bo
      - $(SYMBOL).bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):GO_RBV
      - bi
      - $(SYMBOL).bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):RESET
      - bo
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):RESET_RBV
      - bi
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):VALID_RBV
      - bi
      - TRUE if this is a real state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


                   
ST_PMPS_Aperture_IO
^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Height_RBV
      - ai
      - $(SYMBOL).Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):OK_RBV
      - bi
      - $(SYMBOL).xOK
      - | io: input


    * - $(PREFIX):Width_RBV
      - ai
      - $(SYMBOL).Width
      - | field: EGU mm
        | io: input


 
ST_PMPS_Attenuator_IO
^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Att_RBV
      - longin
      - $(SYMBOL).nAtt
      - | field: EGU %
        | io: input


    * - $(PREFIX):OK_RBV
      - bi
      - $(SYMBOL).xAttOK
      - | io: input


              
Database Records
----------------

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX)AccumulatedFastFaults_RBV
      - longin
      - PMPS_GVL.AccumulatedFF
      - | io: input


    * - $(PREFIX)CurrentBP:Attenuation_RBV
      - ai
      - PMPS_GVL.stCurrentBeamParameters.fAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:001:Att_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[1].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:001:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[1].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:002:Att_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[2].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:002:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[2].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:003:Att_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[3].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:003:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[3].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:004:Att_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[4].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:004:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[4].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:005:Att_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[5].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:005:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[5].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:006:Att_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[6].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:006:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[6].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:007:Att_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[7].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:007:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[7].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:008:Att_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[8].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:008:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[8].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:009:Att_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[9].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:009:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[9].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:010:Att_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[10].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:010:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[10].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:011:Att_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[11].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:011:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[11].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:012:Att_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[12].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:012:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[12].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:013:Att_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[13].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:013:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[13].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:014:Att_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[14].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:014:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[14].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:015:Att_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[15].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:015:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[15].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:016:Att_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[16].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)CurrentBP:AuxAtt:016:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astAttenuators[16].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:PhotonEnergyRanges_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.neVRange
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)CurrentBP:PulseEnergy_RBV
      - ai
      - PMPS_GVL.stCurrentBeamParameters.fPP_mJ
      - | archive: 1s monitor
        | field: EGU mJ
        | io: input


    * - $(PREFIX)CurrentBP:Rate_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.nRate
      - | archive: 1s monitor
        | field: EGU Hz
        | io: input


    * - $(PREFIX)CurrentBP:ST_RBV
      - waveform
      - PMPS_GVL.stCurrentBeamParameters.aStoppers
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:Valid_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.xValid
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)eVRangeCnst
      - waveform
      - eV Range constants
      - | archive: 1s monitor
        | field: EGU keV
        | io: output


    * - $(PREFIX)eVRangeCnst_RBV
      - waveform
      - eV Range constants
      - | archive: 1s monitor
        | field: EGU keV
        | io: output


    * - $(PREFIX)FullBeamCnst:Attenuation_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:001:Att_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:001:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:002:Att_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:002:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:003:Att_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:003:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:004:Att_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:004:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:005:Att_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:005:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:006:Att_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:006:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:007:Att_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:007:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:008:Att_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:008:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:009:Att_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:009:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:010:Att_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:010:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:011:Att_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:011:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:012:Att_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:012:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:013:Att_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:013:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:014:Att_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:014:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:015:Att_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:015:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:016:Att_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)FullBeamCnst:AuxAtt:016:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:PhotonEnergyRanges_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)FullBeamCnst:PulseEnergy_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mJ
        | io: input


    * - $(PREFIX)FullBeamCnst:Rate_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU Hz
        | io: input


    * - $(PREFIX)FullBeamCnst:ST_RBV
      - waveform
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:Valid_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)LCLSGeneral:LogHost
      - waveform
      - The log host IP address
      - | io: output


    * - $(PREFIX)LCLSGeneral:LogHost_RBV
      - waveform
      - The log host IP address
      - | io: output


    * - $(PREFIX)LCLSGeneral:LogPort
      - longout
      - The log host UDP port
      - | io: output


    * - $(PREFIX)LCLSGeneral:LogPort_RBV
      - longin
      - The log host UDP port
      - | io: output


    * - $(PREFIX)RequestedBP:Attenuation_RBV
      - ai
      - PMPS_GVL.stRequestedBeamParameters.fAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:001:Att_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[1].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:001:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[1].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:002:Att_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[2].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:002:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[2].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:003:Att_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[3].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:003:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[3].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:004:Att_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[4].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:004:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[4].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:005:Att_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[5].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:005:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[5].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:006:Att_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[6].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:006:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[6].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:007:Att_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[7].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:007:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[7].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:008:Att_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[8].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:008:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[8].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:009:Att_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[9].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:009:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[9].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:010:Att_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[10].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:010:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[10].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:011:Att_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[11].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:011:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[11].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:012:Att_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[12].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:012:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[12].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:013:Att_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[13].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:013:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[13].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:014:Att_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[14].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:014:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[14].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:015:Att_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[15].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:015:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[15].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:016:Att_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[16].nAtt
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)RequestedBP:AuxAtt:016:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astAttenuators[16].xAttOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:PhotonEnergyRanges_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.neVRange
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)RequestedBP:PulseEnergy_RBV
      - ai
      - PMPS_GVL.stRequestedBeamParameters.fPP_mJ
      - | archive: 1s monitor
        | field: EGU mJ
        | io: input


    * - $(PREFIX)RequestedBP:Rate_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.nRate
      - | archive: 1s monitor
        | field: EGU Hz
        | io: input


    * - $(PREFIX)RequestedBP:ST_RBV
      - waveform
      - PMPS_GVL.stRequestedBeamParameters.aStoppers
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:Valid_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.xValid
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SafeBeamCnst:Attenuation_RBV
      - ai
      - Safe beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:001:Att_RBV
      - longin
      - Safe beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:001:OK_RBV
      - bi
      - Safe beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:002:Att_RBV
      - longin
      - Safe beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:002:OK_RBV
      - bi
      - Safe beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:003:Att_RBV
      - longin
      - Safe beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:003:OK_RBV
      - bi
      - Safe beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:004:Att_RBV
      - longin
      - Safe beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:004:OK_RBV
      - bi
      - Safe beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:005:Att_RBV
      - longin
      - Safe beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:005:OK_RBV
      - bi
      - Safe beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:006:Att_RBV
      - longin
      - Safe beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:006:OK_RBV
      - bi
      - Safe beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:007:Att_RBV
      - longin
      - Safe beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:007:OK_RBV
      - bi
      - Safe beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:008:Att_RBV
      - longin
      - Safe beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:008:OK_RBV
      - bi
      - Safe beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:009:Att_RBV
      - longin
      - Safe beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:009:OK_RBV
      - bi
      - Safe beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:010:Att_RBV
      - longin
      - Safe beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:010:OK_RBV
      - bi
      - Safe beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:011:Att_RBV
      - longin
      - Safe beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:011:OK_RBV
      - bi
      - Safe beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:012:Att_RBV
      - longin
      - Safe beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:012:OK_RBV
      - bi
      - Safe beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:013:Att_RBV
      - longin
      - Safe beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:013:OK_RBV
      - bi
      - Safe beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:014:Att_RBV
      - longin
      - Safe beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:014:OK_RBV
      - bi
      - Safe beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:015:Att_RBV
      - longin
      - Safe beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:015:OK_RBV
      - bi
      - Safe beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:016:Att_RBV
      - longin
      - Safe beam constant
      - | archive: 1s monitor
        | field: EGU %
        | io: input


    * - $(PREFIX)SafeBeamCnst:AuxAtt:016:OK_RBV
      - bi
      - Safe beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SafeBeamCnst:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SafeBeamCnst:PhotonEnergyRanges_RBV
      - longin
      - Safe beam constant
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)SafeBeamCnst:PulseEnergy_RBV
      - ai
      - Safe beam constant
      - | archive: 1s monitor
        | field: EGU mJ
        | io: input


    * - $(PREFIX)SafeBeamCnst:Rate_RBV
      - longin
      - Safe beam constant
      - | archive: 1s monitor
        | field: EGU Hz
        | io: input


    * - $(PREFIX)SafeBeamCnst:ST_RBV
      - waveform
      - Safe beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SafeBeamCnst:Valid_RBV
      - bi
      - Safe beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SuccessfulPreemptions_RBV
      - longin
      - PMPS_GVL.SuccessfulPreemption
      - | io: input


    * - IM1K1:PPM:CAM:CIL:PCT
      - ao
      - PRG_IM1K1_PPM.fbIM1K1.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM1K1:PPM:CAM:CIL:PCT_RBV
      - ai
      - PRG_IM1K1_PPM.fbIM1K1.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM1K1:PPM:CAM:PWR
      - bo
      - PRG_IM1K1_PPM.fbIM1K1.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM1K1:PPM:CAM:PWR_RBV
      - bi
      - PRG_IM1K1_PPM.fbIM1K1.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM1K1:PPM:MMS:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1K1:PPM:MMS:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1K1:PPM:MMS:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1K1:PPM:MMS:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1K1:PPM:MMS:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1K1:PPM:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1K1:PPM:MMS:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM1K1:PPM:MMS:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM1K1:PPM:MMS:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM1K1:PPM:MMS:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM1K1:PPM:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM1K1:PPM:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM1K1:PPM:MMS:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM1K1:PPM:MMS:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM1K1:PPM:MMS:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM1K1:PPM:MMS:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM1K1:PPM:MMS:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - IM1K1:PPM:MMS:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM1K1:PPM:MMS:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM1K1:PPM:MMS:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM1K1:PPM:MMS:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM1K1:PPM:MMS:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - IM1K1:PPM:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - IM1K1:PPM:MMS:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - IM1K1:PPM:MMS:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - IM1K1:PPM:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - IM1K1:PPM:MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:10:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:10:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:10:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:10:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:10:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:10:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:10:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:10:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:11:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:11:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:11:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:11:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:11:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:11:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:11:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:11:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:12:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:12:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:12:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:12:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:12:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:12:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:12:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:12:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:13:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:13:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:13:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:13:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:13:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:13:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:13:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:13:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:14:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:14:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:14:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:14:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:14:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:14:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:14:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:14:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:15:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:15:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:15:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:15:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:15:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:15:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:15:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:15:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:BUSY_RBV
      - bi
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.fbStateManager.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM1K1:PPM:MMS:STATE:DONE_RBV
      - bi
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.fbStateManager.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM1K1:PPM:MMS:STATE:ERR_RBV
      - bi
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.fbStateManager.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM1K1:PPM:MMS:STATE:ERRID_RBV
      - longin
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.fbStateManager.nErrorId
      - | io: input


    * - IM1K1:PPM:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.fbStateManager.sErrorMessage
      - | io: input


    * - IM1K1:PPM:MMS:STATE:GET_RBV
      - mbbi
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.enumGet
      - | io: input


    * - IM1K1:PPM:MMS:STATE:RESET
      - bo
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.fbStateManager.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM1K1:PPM:MMS:STATE:RESET_RBV
      - bi
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.fbStateManager.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM1K1:PPM:MMS:STATE:SET
      - mbbo
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.enumSet
      - | io: output


    * - IM1K1:PPM:MMS:STATE:SET_RBV
      - mbbi
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.enumSet
      - | io: output


    * - IM1K1:PPM:SFM:FLOW_RBV
      - ai
      - PRG_IM1K1_PPM.fbIM1K1.fbFlowMeter.fFlowRate
      - | io: input


    * - IM1K1:PPM:SFM:MA_RBV
      - longin
      - PRG_IM1K1_PPM.fbIM1K1.fbFlowMeter.fRaw
      - | io: input


    * - IM1K1:PPM:SPM:CALIB:MJ_RATIO
      - ao
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM1K1:PPM:SPM:CALIB:MJ_RATIO_RBV
      - ai
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM1K1:PPM:SPM:CALIB:OFFSET
      - ao
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM1K1:PPM:SPM:CALIB:OFFSET_RBV
      - ai
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM1K1:PPM:SPM:CALIB:RATIO
      - ao
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM1K1:PPM:SPM:CALIB:RATIO_RBV
      - ai
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM1K1:PPM:SPM:CALIB_BUFFER_RBV
      - waveform
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fCalibBaseBuffer
      - | io: input


    * - IM1K1:PPM:SPM:CALIB_RBV
      - ai
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fCalibBase
      - | io: input


    * - IM1K1:PPM:SPM:MJ_BUFFER_RBV
      - waveform
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - IM1K1:PPM:SPM:MJ_RBV
      - ai
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fCalibMJ
      - | field: EGU mJ
        | io: input


    * - IM1K1:PPM:SPM:STC:CONN_RBV
      - bi
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fbThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM1K1:PPM:SPM:STC:ERR_RBV
      - bi
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fbThermoCouple.bError
      - | io: input


    * - IM1K1:PPM:SPM:STC:TEMP_RBV
      - ai
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fbThermoCouple.fTemp
      - | io: input


    * - IM1K1:PPM:SPM:VOLT_BUFFER_RBV
      - waveform
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - IM1K1:PPM:SPM:VOLT_RBV
      - ai
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fVoltage
      - | field: EGU mV
        | io: input


    * - IM1K1:PPM:YAG:STC:CONN_RBV
      - bi
      - PRG_IM1K1_PPM.fbIM1K1.fbYagThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM1K1:PPM:YAG:STC:ERR_RBV
      - bi
      - PRG_IM1K1_PPM.fbIM1K1.fbYagThermoCouple.bError
      - | io: input


    * - IM1K1:PPM:YAG:STC:TEMP_RBV
      - ai
      - PRG_IM1K1_PPM.fbIM1K1.fbYagThermoCouple.fTemp
      - | io: input


    * - IM2K1:PPM:CAM:CIL:PCT
      - ao
      - PRG_IM2K1_PPM.fbIM2K1.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM2K1:PPM:CAM:CIL:PCT_RBV
      - ai
      - PRG_IM2K1_PPM.fbIM2K1.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM2K1:PPM:CAM:PWR
      - bo
      - PRG_IM2K1_PPM.fbIM2K1.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM2K1:PPM:CAM:PWR_RBV
      - bi
      - PRG_IM2K1_PPM.fbIM2K1.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM2K1:PPM:MMS:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2K1:PPM:MMS:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2K1:PPM:MMS:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2K1:PPM:MMS:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2K1:PPM:MMS:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2K1:PPM:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2K1:PPM:MMS:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM2K1:PPM:MMS:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM2K1:PPM:MMS:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM2K1:PPM:MMS:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM2K1:PPM:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM2K1:PPM:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM2K1:PPM:MMS:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM2K1:PPM:MMS:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM2K1:PPM:MMS:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM2K1:PPM:MMS:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM2K1:PPM:MMS:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - IM2K1:PPM:MMS:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM2K1:PPM:MMS:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM2K1:PPM:MMS:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM2K1:PPM:MMS:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM2K1:PPM:MMS:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - IM2K1:PPM:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - IM2K1:PPM:MMS:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - IM2K1:PPM:MMS:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - IM2K1:PPM:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - IM2K1:PPM:MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:10:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:10:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:10:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:10:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:10:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:10:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:10:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:10:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:11:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:11:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:11:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:11:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:11:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:11:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:11:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:11:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:12:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:12:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:12:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:12:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:12:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:12:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:12:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:12:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:13:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:13:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:13:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:13:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:13:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:13:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:13:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:13:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:14:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:14:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:14:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:14:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:14:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:14:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:14:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:14:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:15:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:15:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:15:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:15:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:15:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:15:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:15:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:15:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:BUSY_RBV
      - bi
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.fbStateManager.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM2K1:PPM:MMS:STATE:DONE_RBV
      - bi
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.fbStateManager.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM2K1:PPM:MMS:STATE:ERR_RBV
      - bi
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.fbStateManager.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM2K1:PPM:MMS:STATE:ERRID_RBV
      - longin
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.fbStateManager.nErrorId
      - | io: input


    * - IM2K1:PPM:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.fbStateManager.sErrorMessage
      - | io: input


    * - IM2K1:PPM:MMS:STATE:GET_RBV
      - mbbi
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.enumGet
      - | io: input


    * - IM2K1:PPM:MMS:STATE:RESET
      - bo
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.fbStateManager.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM2K1:PPM:MMS:STATE:RESET_RBV
      - bi
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.fbStateManager.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM2K1:PPM:MMS:STATE:SET
      - mbbo
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.enumSet
      - | io: output


    * - IM2K1:PPM:MMS:STATE:SET_RBV
      - mbbi
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.enumSet
      - | io: output


    * - IM2K1:PPM:SFM:FLOW_RBV
      - ai
      - PRG_IM2K1_PPM.fbIM2K1.fbFlowMeter.fFlowRate
      - | io: input


    * - IM2K1:PPM:SFM:MA_RBV
      - longin
      - PRG_IM2K1_PPM.fbIM2K1.fbFlowMeter.fRaw
      - | io: input


    * - IM2K1:PPM:SPM:CALIB:MJ_RATIO
      - ao
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM2K1:PPM:SPM:CALIB:MJ_RATIO_RBV
      - ai
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM2K1:PPM:SPM:CALIB:OFFSET
      - ao
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM2K1:PPM:SPM:CALIB:OFFSET_RBV
      - ai
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM2K1:PPM:SPM:CALIB:RATIO
      - ao
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM2K1:PPM:SPM:CALIB:RATIO_RBV
      - ai
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM2K1:PPM:SPM:CALIB_BUFFER_RBV
      - waveform
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fCalibBaseBuffer
      - | io: input


    * - IM2K1:PPM:SPM:CALIB_RBV
      - ai
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fCalibBase
      - | io: input


    * - IM2K1:PPM:SPM:MJ_BUFFER_RBV
      - waveform
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - IM2K1:PPM:SPM:MJ_RBV
      - ai
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fCalibMJ
      - | field: EGU mJ
        | io: input


    * - IM2K1:PPM:SPM:STC:CONN_RBV
      - bi
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fbThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM2K1:PPM:SPM:STC:ERR_RBV
      - bi
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fbThermoCouple.bError
      - | io: input


    * - IM2K1:PPM:SPM:STC:TEMP_RBV
      - ai
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fbThermoCouple.fTemp
      - | io: input


    * - IM2K1:PPM:SPM:VOLT_BUFFER_RBV
      - waveform
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - IM2K1:PPM:SPM:VOLT_RBV
      - ai
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fVoltage
      - | field: EGU mV
        | io: input


    * - IM2K1:PPM:YAG:STC:CONN_RBV
      - bi
      - PRG_IM2K1_PPM.fbIM2K1.fbYagThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM2K1:PPM:YAG:STC:ERR_RBV
      - bi
      - PRG_IM2K1_PPM.fbIM2K1.fbYagThermoCouple.bError
      - | io: input


    * - IM2K1:PPM:YAG:STC:TEMP_RBV
      - ai
      - PRG_IM2K1_PPM.fbIM2K1.fbYagThermoCouple.fTemp
      - | io: input


    * - ST1K1:ZOS:MMS:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - ST1K1:ZOS:MMS:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - ST1K1:ZOS:MMS:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - ST1K1:ZOS:MMS:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - ST1K1:ZOS:MMS:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - ST1K1:ZOS:MMS:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - ST1K1:ZOS:MMS:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - ST1K1:ZOS:MMS:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - ST1K1:ZOS:MMS:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - ST1K1:ZOS:MMS:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - ST1K1:ZOS:MMS:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - ST1K1:ZOS:MMS:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - ST1K1:ZOS:MMS:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - ST1K1:ZOS:MMS:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - ST1K1:ZOS:MMS:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - ST1K1:ZOS:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - ST1K1:ZOS:MMS:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - ST1K1:ZOS:MMS:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - ST1K1:ZOS:MMS:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - ST1K1:ZOS:MMS:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - ST1K1:ZOS:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - ST1K1:ZOS:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - ST1K1:ZOS:MMS:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - ST1K1:ZOS:MMS:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - ST1K1:ZOS:MMS:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - ST1K1:ZOS:MMS:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - ST1K1:ZOS:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - ST1K1:ZOS:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - ST1K1:ZOS:MMS:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - ST1K1:ZOS:MMS:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - ST1K1:ZOS:MMS:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - ST1K1:ZOS:MMS:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - ST1K1:ZOS:MMS:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - ST1K1:ZOS:MMS:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - ST1K1:ZOS:MMS:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - ST1K1:ZOS:MMS:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - ST1K1:ZOS:MMS:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - ST1K1:ZOS:MMS:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - ST1K1:ZOS:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - ST1K1:ZOS:MMS:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - ST1K1:ZOS:MMS:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - ST1K1:ZOS:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input



